import { serve } from "https://deno.land/std@0.190.0/http/server.ts";
import { createClient } from "https://esm.sh/@supabase/supabase-js@2.38.4";
import { Resend } from "npm:resend@2.0.0";

const resend = new Resend(Deno.env.get("RESEND_API_KEY"));

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers":
    "authorization, x-client-info, apikey, content-type",
};

interface ContactSubmission {
  firstName: string;
  lastName: string;
  email: string;
  phone: string;
  company?: string;
  inquiryType: string;
  message: string;
}

const handler = async (req: Request): Promise<Response> => {
  // Handle CORS preflight requests
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const submission: ContactSubmission = await req.json();

    // Validate required fields
    if (!submission.firstName || !submission.lastName || !submission.email || 
        !submission.phone || !submission.inquiryType || !submission.message) {
      return new Response(
        JSON.stringify({ error: "Missing required fields" }),
        {
          status: 400,
          headers: { "Content-Type": "application/json", ...corsHeaders },
        }
      );
    }

    // Validate field lengths
    if (submission.firstName.length > 100 || submission.lastName.length > 100) {
      return new Response(
        JSON.stringify({ error: "Name fields must be less than 100 characters" }),
        { status: 400, headers: { "Content-Type": "application/json", ...corsHeaders } }
      );
    }

    if (submission.email.length > 255) {
      return new Response(
        JSON.stringify({ error: "Email must be less than 255 characters" }),
        { status: 400, headers: { "Content-Type": "application/json", ...corsHeaders } }
      );
    }

    if (submission.message.length > 2000) {
      return new Response(
        JSON.stringify({ error: "Message must be less than 2000 characters" }),
        { status: 400, headers: { "Content-Type": "application/json", ...corsHeaders } }
      );
    }

    // Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(submission.email)) {
      return new Response(
        JSON.stringify({ error: "Invalid email format" }),
        { status: 400, headers: { "Content-Type": "application/json", ...corsHeaders } }
      );
    }

    // Create Supabase client
    const supabaseUrl = Deno.env.get("SUPABASE_URL")!;
    const supabaseServiceKey = Deno.env.get("SUPABASE_SERVICE_ROLE_KEY")!;
    const supabase = createClient(supabaseUrl, supabaseServiceKey);

    // Insert into database (reference_id will be auto-generated by trigger)
    const { data: insertedData, error: dbError } = await supabase
      .from("contact_submissions")
      .insert({
        first_name: submission.firstName.trim(),
        last_name: submission.lastName.trim(),
        email: submission.email.trim().toLowerCase(),
        phone: submission.phone.trim(),
        company: submission.company?.trim() || null,
        inquiry_type: submission.inquiryType,
        message: submission.message.trim(),
        reference_id: '', // Will be replaced by trigger
      })
      .select()
      .single();

    if (dbError) {
      console.error("Database error:", dbError);
      return new Response(
        JSON.stringify({ error: "Failed to save submission" }),
        {
          status: 500,
          headers: { "Content-Type": "application/json", ...corsHeaders },
        }
      );
    }

    const referenceId = insertedData.reference_id;
    console.log(`New contact submission: ${referenceId}`);

    // Send acknowledgement email to customer
    try {
      await resend.emails.send({
        from: "FDL D&T Express <onboarding@resend.dev>",
        to: [submission.email],
        subject: `Thank You for Contacting FDL D&T Express - Ref: ${referenceId}`,
        html: `
          <!DOCTYPE html>
          <html>
            <head>
              <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background-color: #1e40af; color: white; padding: 20px; text-align: center; }
                .content { padding: 20px; background-color: #f9fafb; }
                .reference { background-color: #dbeafe; padding: 15px; margin: 20px 0; border-left: 4px solid #1e40af; }
                .footer { padding: 20px; text-align: center; color: #6b7280; font-size: 14px; }
              </style>
            </head>
            <body>
              <div class="container">
                <div class="header">
                  <h1>Thank You for Contacting Us!</h1>
                </div>
                <div class="content">
                  <p>Dear ${submission.firstName} ${submission.lastName},</p>
                  
                  <p>We have received your inquiry and our team will respond within 2 business hours.</p>
                  
                  <div class="reference">
                    <strong>Your Reference ID:</strong> ${referenceId}
                    <br>
                    <small>Please save this reference number for your records.</small>
                  </div>
                  
                  <p><strong>What you submitted:</strong></p>
                  <ul>
                    <li><strong>Inquiry Type:</strong> ${submission.inquiryType}</li>
                    <li><strong>Company:</strong> ${submission.company || 'Not provided'}</li>
                  </ul>
                  
                  <p>If you have an urgent matter, please call us at <strong>(555) 123-4567</strong>.</p>
                  
                  <p>Best regards,<br>
                  The FDL D&T Express Team</p>
                </div>
                <div class="footer">
                  <p>FDL D&T Express | Temperature-Controlled Logistics</p>
                  <p>This is an automated message. Please do not reply to this email.</p>
                </div>
              </div>
            </body>
          </html>
        `,
      });
      console.log(`Acknowledgement email sent to ${submission.email}`);
    } catch (emailError) {
      console.error("Failed to send acknowledgement email:", emailError);
      // Don't fail the request if email fails - submission is already saved
    }

    // Send notification email to staff
    try {
      await resend.emails.send({
        from: "FDL Contact Form <onboarding@resend.dev>",
        to: ["staff@fdlteam.com"],
        subject: `New Contact Form Submission - ${referenceId}`,
        html: `
          <!DOCTYPE html>
          <html>
            <head>
              <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 700px; margin: 0 auto; padding: 20px; }
                .header { background-color: #dc2626; color: white; padding: 20px; }
                .content { padding: 20px; background-color: #fff; border: 1px solid #e5e7eb; }
                .field { margin: 15px 0; padding: 10px; background-color: #f9fafb; border-left: 3px solid #dc2626; }
                .field-label { font-weight: bold; color: #374151; }
                .field-value { margin-top: 5px; }
                .urgent { background-color: #fee2e2; padding: 15px; margin: 20px 0; border-left: 4px solid #dc2626; }
              </style>
            </head>
            <body>
              <div class="container">
                <div class="header">
                  <h2>üîî New Contact Form Submission</h2>
                  <p style="margin: 5px 0;">Reference: ${referenceId}</p>
                </div>
                <div class="content">
                  <div class="urgent">
                    <strong>‚ö†Ô∏è Inquiry Type:</strong> ${submission.inquiryType}
                  </div>
                  
                  <div class="field">
                    <div class="field-label">Name:</div>
                    <div class="field-value">${submission.firstName} ${submission.lastName}</div>
                  </div>
                  
                  <div class="field">
                    <div class="field-label">Email:</div>
                    <div class="field-value"><a href="mailto:${submission.email}">${submission.email}</a></div>
                  </div>
                  
                  <div class="field">
                    <div class="field-label">Phone:</div>
                    <div class="field-value"><a href="tel:${submission.phone}">${submission.phone}</a></div>
                  </div>
                  
                  <div class="field">
                    <div class="field-label">Company:</div>
                    <div class="field-value">${submission.company || 'Not provided'}</div>
                  </div>
                  
                  <div class="field">
                    <div class="field-label">Message:</div>
                    <div class="field-value" style="white-space: pre-wrap;">${submission.message}</div>
                  </div>
                  
                  <div style="margin-top: 20px; padding: 15px; background-color: #f0fdf4; border-left: 3px solid #22c55e;">
                    <strong>üìã Next Steps:</strong>
                    <ul>
                      <li>Review the inquiry type and priority</li>
                      <li>Respond within 2 business hours</li>
                      <li>Update status in CRM with reference: ${referenceId}</li>
                    </ul>
                  </div>
                </div>
              </div>
            </body>
          </html>
        `,
      });
      console.log("Staff notification email sent");
    } catch (emailError) {
      console.error("Failed to send staff notification email:", emailError);
      // Don't fail the request if email fails
    }

    return new Response(
      JSON.stringify({ 
        success: true, 
        referenceId,
        message: "Your inquiry has been submitted successfully!" 
      }),
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
          ...corsHeaders,
        },
      }
    );
  } catch (error: any) {
    console.error("Error in submit-contact-form function:", error);
    return new Response(
      JSON.stringify({ error: error.message || "An unexpected error occurred" }),
      {
        status: 500,
        headers: { "Content-Type": "application/json", ...corsHeaders },
      }
    );
  }
};

serve(handler);